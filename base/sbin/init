#!/ventoy/busybox/ash
#************************************************************************************
# Copyright (c) 2020, longpanda <admin@ventoy.net>
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.
# 
#************************************************************************************

####################################################################
#                                                                  #
# Step 1 : extract busybox & set busybox environment               #
#                                                                  #
####################################################################

if [ -z "$VTOY_TRACE" ]; then
    echo "\n==== VENTOY TRACE ===="
    set -x
fi

export VTOY_ORG_PATH=$PATH
export VTOY_PATH=/ventoy
export BUSYBOX_PATH=$VTOY_PATH/busybox
export TOOL_PATH=$VTOY_PATH/tool
export PATH=$BUSYBOX_PATH:$TOOL_PATH
export VTLOG=$VTOY_PATH/log

export FIND=$BUSYBOX_PATH/find
export GREP=$BUSYBOX_PATH/grep
export EGREP=$BUSYBOX_PATH/egrep
export CAT=$BUSYBOX_PATH/cat
export AWK=$BUSYBOX_PATH/awk
export SED=$BUSYBOX_PATH/sed
export SLEEP=$BUSYBOX_PATH/sleep
export HEAD=$BUSYBOX_PATH/head

if [ -e $BUSYBOX_PATH/busyboxaa64.xz ]; then
    VTOY_ARCH=aarch64
    VTOY_SUFFIX=aa64
elif [ -e $BUSYBOX_PATH/busyboxm64e.xz ]; then
    VTOY_ARCH=mips64el
    VTOY_SUFFIX=m64e
elif [ -e $BUSYBOX_PATH/32h ] || $BUSYBOX_PATH/vtchmod32 -6; then
    VTOY_ARCH=x86_64
    VTOY_SUFFIX=64
else
    VTOY_ARCH=i386
    VTOY_SUFFIX=32
fi

export VTOY_ARCH
export VTOY_SUFFIX

echo $VTOY_ARCH > $VTOY_PATH/ventoy_arch

cd $BUSYBOX_PATH
xzminidec$VTOY_SUFFIX < busybox$VTOY_SUFFIX.xz > busybox
vtchmod$VTOY_SUFFIX busybox

$BUSYBOX_PATH/busybox --install $BUSYBOX_PATH

export VTOY_BREAK_LEVEL=$(hexdump -n 1 -s 449 -e '1/1 "%02x"' $VTOY_PATH/ventoy_os_param)
export VTOY_DEBUG_LEVEL=$(hexdump -n 1 -s 450 -e '1/1 "%02x"' $VTOY_PATH/ventoy_os_param)
export VTOY_LINUX_REMOUNT=$(hexdump -n 1 -s 454 -e '1/1 "%02x"' $VTOY_PATH/ventoy_os_param)

#Fixme: busybox shell output redirect seems to have some bug in rhel5
if uname -a | grep -q el5; then
    VTOY_XZ_SUF="2>>$VTLOG"
fi

echo "============== VENTOY =================" >>$VTLOG

cd $VTOY_PATH
xz -d ventoy_chain.sh.xz
xz -d ventoy_loop.sh.xz

xz -d -c hook.cpio.xz | cpio -idm $VTOY_XZ_SUF
xz -d -c tool.cpio.xz | cpio -idm $VTOY_XZ_SUF
xz -d -c loop.cpio.xz | cpio -idm $VTOY_XZ_SUF

cd busybox
#xzcat xzcat$VTOY_SUFFIX_musl.xz > xzcat_musl
#chmod +x xzcat_musl
ln -s xzminidec$VTOY_SUFFIX xzminidec
cd $TOOL_PATH
ln -s dmsetup$VTOY_SUFFIX dmsetup
ln -s lunzip$VTOY_SUFFIX lunzip

if [ "$VTOY_ARCH" = "x86_64" ]; then
    echo "Use x86_64 busybox toolkit ..." >>$VTLOG
    rm -f $VTOY_PATH/tool/lz4cat $VTOY_PATH/tool/zstdcat
    ln -s $VTOY_PATH/tool/lz4cat64 $VTOY_PATH/tool/lz4cat
    ln -s $VTOY_PATH/tool/zstdcat64 $VTOY_PATH/tool/zstdcat
elif [ "$VTOY_ARCH" = "i386" ]; then
    echo "Use i386 busybox toolkit ..." >>$VTLOG
    if uname -a | grep -E -q 'x86_64|amd64'; then
        echo "zstdcat use 64bit ..." >>$VTLOG
        rm -f $VTOY_PATH/tool/zstdcat
        ln -s $VTOY_PATH/tool/zstdcat64 $VTOY_PATH/tool/zstdcat
    fi
elif [ "$VTOY_ARCH" = "mips64el" ]; then
    echo "Use MIPS64 busybox toolkit ..." >>$VTLOG
    rm -f $VTOY_PATH/tool/lz4cat $VTOY_PATH/tool/zstdcat
    ln -s $VTOY_PATH/tool/lz4catm64e $VTOY_PATH/tool/lz4cat
    # TBD
    #ln -s $VTOY_PATH/tool/lunzipm64e $VTOY_PATH/tool/lunzip
    # TBD
    #ln -s $VTOY_PATH/tool/zstdcataa64 $VTOY_PATH/tool/zstdcat
elif [ "$VTOY_ARCH" = "aarch64" ]; then
    echo "Use ARM64 busybox toolkit ..." >>$VTLOG
    rm -f $VTOY_PATH/tool/lz4cat $VTOY_PATH/tool/zstdcat
    ln -s $VTOY_PATH/tool/lz4cataa64 $VTOY_PATH/tool/lz4cat
    ln -s $VTOY_PATH/tool/zstdcataa64 $VTOY_PATH/tool/zstdcat
else
    echo "Unknown busybox toolkit ..." >>$VTLOG
fi

rm -f *.xz
cd /

####################################################################
#                                                                  #
# Step 2 : Hand over to ventoy init                                #
#                                                                  #
####################################################################
exec $BUSYBOX_PATH/sh $VTOY_PATH/init
